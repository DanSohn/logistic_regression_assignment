# -*- coding: utf-8 -*-
"""MNIST_Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cGjVHbfKW4ly6YE5l5IEJx1ndgAJQsqx
"""

# Commented out IPython magic to ensure Python compatibility.
try:
#   %tensorflow_version 2.x
except Exception:
  pass

import tensorflow as tf

# getting the data 
mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()
# processing data
# we need to level color data to 0 to 1 range
x_train, x_test = x_train/255.0, x_test/255.0

# make model
model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(512, activation='relu'),
  tf.keras.layers.Dropout(0.1),
  tf.keras.layers.Dense(1024, activation='sigmoid'),
  tf.keras.layers.Dropout(0.1),
  tf.keras.layers.Dense(256, activation='softmax')
])

# specify loss function
model.compile(
  optimizer='adam',
  loss='sparse_categorical_crossentropy',
  metrics=['accuracy'])

# train our model and evaluate it's quality
model.fit(x_train, y_train, epochs=10)

print("--train--")
model_loss, model_acc = model.evaluate(x_train,  y_train, verbose=2)
print(f"Model Loss:    {model_loss:.2f}")
print(f"Model Accuray: {model_acc*100:.1f}%")
print("--test--")
model_loss, model_acc = model.evaluate(x_test,  y_test, verbose=2)
print(f"Model Loss:    {model_loss:.2f}")
print(f"Model Accuray: {model_acc*100:.1f}%")

model.save('MNIST_fix.h5')

from google.colab import files
files.download('MNIST_fix.h5')